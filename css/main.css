/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/*****************************************************************************/
/*
/* Common
/*
/*****************************************************************************/
/* Global Reset */
* {
  margin: 0; }

body,
html {
  height: 100%;
  max-width: 100%; }

html {
  box-sizing: border-box; }

*,
*:after,
*:before {
  box-sizing: inherit; }

body {
  background-color: #FFFFFF;
  font: 1rem/150% Helvetica, Arial, sans-serif;
  color: #2B2E35; }

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: 'Inconsolata', monospace; }

h1 {
  margin-bottom: 1em; }

p {
  margin: 1em 0;
  font-family: 'Inconsolata', 'Noto Serif', serif; }

.date {
  font-family: 'Inconsolata', monospace; }

.underline {
  text-decoration: underline; }

li {
  font-family: 'Inconsolata', 'Noto Serif', serif; }

a {
  color: #2B2E35;
  font-family: 'Inconsolata', 'Noto Serif', serif;
  text-decoration: none; }

a:hover {
  color: #000; }

img {
  max-width: 100%;
  display: block;
  height: auto; }

.cf:before,
.cf:after {
  content: " ";
  display: table; }

.cf:after {
  clear: both; }

/*****************************************************************************/
/*
  /* Home
  /*
  /*****************************************************************************/
/*****************************************************************************/
/*
  /* Site
  /*
  /*****************************************************************************/
/*****************************************************************************/
/*
  /* Posts
  /*
  /*****************************************************************************/
/* standard */
.post pre {
  border: 1px solid #ddd;
  background-color: #eef;
  padding: 0 0.4em; }

.post code {
  border: 1px solid #ddd;
  background-color: #eef;
  padding: 0 0.2em; }

.post pre code {
  border: none; }

/* terminal */
.post pre.terminal {
  border: 1px solid #000;
  background-color: #333;
  color: #FFF; }

.post pre.terminal code {
  background-color: #333; }

.animated {
  -webkit-animation-duration: 1s;
          animation-duration: 1s;
  -webkit-animation-fill-mode: both;
          animation-fill-mode: both; }

@-webkit-keyframes fadeInDown {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
            transform: none; } }

@keyframes fadeInDown {
  from {
    opacity: 0;
    -webkit-transform: translate3d(0, -100%, 0);
            transform: translate3d(0, -100%, 0); }
  to {
    opacity: 1;
    -webkit-transform: none;
            transform: none; } }

.fadeInDown {
  -webkit-animation-name: fadeInDown;
          animation-name: fadeInDown; }

@-webkit-keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

@keyframes fadeIn {
  from {
    opacity: 0; }
  to {
    opacity: 1; } }

.fadeIn {
  -webkit-animation-name: fadeIn;
          animation-name: fadeIn; }

body {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  background-color: #C5C5C5; }

.square {
  position: fixed;
  z-index: -10; }

.hidden {
  display: none; }

.post-wrapper {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }
  .post-wrapper .post-container {
    margin-bottom: 2rem; }
  .post-wrapper .post-pagination {
    border-top: 2px solid #2B2E35;
    padding-top: 1rem;
    width: 70%;
    margin: 2rem auto;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: justify;
        justify-content: space-between;
    margin-top: auto;
    font-weight: bold; }
    .post-wrapper .post-pagination .next {
      margin-left: auto; }

.site-container {
  display: -ms-flexbox;
  display: flex; }
  .site-container header {
    padding: 10px 20px;
    -ms-flex: 0 0 26%;
        flex: 0 0 26%; }
  .site-container .main-content {
    display: -ms-flexbox;
    display: flex;
    -ms-flex: 1 1 auto;
        flex: 1 1 auto;
    background: #eee;
    padding: 10px 20px;
    padding-top: 50px; }
  @media (max-width: 600px) {
    .site-container header,
    .site-container .main-content {
      width: 100%;
      padding-top: 0; } }
  .site-container .work-popup-outer {
    position: absolute;
    width: 60%;
    padding: 20px;
    height: auto;
    background-color: #C5C5C5;
    margin: 0 auto;
    right: 0;
    left: 0;
    border: 2px solid #c42e0d;
    top: 8%;
    z-index: 10; }
    .site-container .work-popup-outer .close-work {
      font-style: italic;
      font-size: 0.8rem;
      position: absolute;
      top: 5px;
      right: 20px;
      cursor: pointer; }
    .site-container .work-popup-outer .post-container {
      margin: 0 auto;
      width: 90%;
      overflow: scroll;
      max-height: 400px; }
      .site-container .work-popup-outer .post-container a {
        cursor: pointer; }
    @media screen and (max-width: 600px) {
      .site-container .work-popup-outer {
        width: 95%;
        padding: 20px 5px;
        top: 5%; }
        .site-container .work-popup-outer .close-work {
          font-size: 1rem;
          top: 5px;
          right: 10px; }
        .site-container .work-popup-outer .post-container {
          width: 95%; } }

.post-container .post-link {
  display: inline-block;
  background-image: url("/assets/icons/link.svg");
  height: 16px;
  width: 16px;
  background-size: contain;
  background-repeat: no-repeat; }

header .updating {
  text-align: center;
  margin-top: 60px;
  font-size: 2rem;
  border: 1px dashed; }

header .goth {
  font-family: 'Fraktur BT';
  color: #000; }

header h1 {
  font-family: 'Inconsolata', monospace;
  font-size: 2.8rem;
  line-height: 1.1; }

header h2 {
  font-weight: 200;
  text-decoration: underline; }

header ul {
  list-style: none;
  margin-top: 30px;
  padding-left: 0; }
  header ul li {
    margin-top: 5px; }

@media screen and (max-width: 600px) {
  header h1 {
    font-size: 1.8rem; }
  header ul {
    margin-top: 15px; } }

#work h1 {
  font-size: 1.2rem;
  margin-bottom: 5px; }
  @media screen and (max-width: 600px) {
    #work h1 {
      margin-top: 0; } }

#work .posts {
  list-style: none;
  padding-left: 0px; }
  #work .posts li {
    width: 200px;
    font-size: 0.8rem;
    line-height: 1.5;
    margin-bottom: 5px; }
  #work .posts a {
    font-size: 0.9rem; }

.date {
  text-decoration: underline; }

.post img {
  margin: 0 auto; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
